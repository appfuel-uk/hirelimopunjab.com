{
  "manifest": {
    "name": "bash-glob",
    "description": "Bash-powered globbing for node.js",
    "version": "1.0.2",
    "homepage": "https://github.com/micromatch/bash-glob",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/micromatch/bash-glob.git"
    },
    "bugs": {
      "url": "https://github.com/micromatch/bash-glob/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=4.0"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "async-each": "^1.0.1",
      "bash-path": "^1.0.1",
      "component-emitter": "^1.2.1",
      "cross-spawn": "^5.1.0",
      "extend-shallow": "^2.0.1",
      "is-extglob": "^2.1.1",
      "is-glob": "^4.0.0"
    },
    "devDependencies": {
      "arr-union": "^3.1.0",
      "array-unique": "^0.3.2",
      "async-array-reduce": "^1.0.0",
      "delete": "^1.1.0",
      "glob": "^7.1.2",
      "gulp-format-md": "^1.0.0",
      "minimist": "^1.2.0",
      "mkdirp": "^0.5.1",
      "mocha": "^3.2.0"
    },
    "keywords": [
      "bash",
      "expand",
      "expansion",
      "expression",
      "file",
      "files",
      "filter",
      "find",
      "glob",
      "globbing",
      "globs",
      "globstar",
      "match",
      "matcher",
      "matches",
      "matching",
      "micromatch",
      "minimatch",
      "multimatch",
      "nanomatch",
      "path",
      "pattern",
      "patterns",
      "regex",
      "regexp",
      "regular",
      "shell",
      "wildcard"
    ],
    "verb": {
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "related": {
        "list": [
          "bash-match",
          "braces",
          "micromatch",
          "nanomatch"
        ]
      },
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-bash-glob-1.0.2-95ac5631fdd7a8fc569f267167a84eb831979a1b/package.json",
    "readmeFilename": "README.md",
    "readme": "# bash-glob [![NPM version](https://img.shields.io/npm/v/bash-glob.svg?style=flat)](https://www.npmjs.com/package/bash-glob) [![NPM monthly downloads](https://img.shields.io/npm/dm/bash-glob.svg?style=flat)](https://npmjs.org/package/bash-glob) [![NPM total downloads](https://img.shields.io/npm/dt/bash-glob.svg?style=flat)](https://npmjs.org/package/bash-glob) [![Linux Build Status](https://img.shields.io/travis/micromatch/bash-glob.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/bash-glob)\n\n> Bash-powered globbing for node.js\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save bash-glob\n```\n\n**Install bash 4.3 or later**\n\nI recommend using [homebrew](https://github.com/Homebrew/homebrew-core) to install/upgrade bash:\n\n```sh\n$ brew upgrade bash\n```\n\n## Why?\n\nThe initial motivation was to use this for generating the `expected` values for comparisons in tests. But as it turns out, this is faster than node-glob in most cases I've tested.\n\nMoreover, this supports the majority of the feature-functionaly in node-glob, and it's more Bash-compliant since, well, it **is** Bash.\n\n**Edge cases**\n\nInevitably there will be edge cases. Thus far, however, I've found that many of the edge cases that seem to be problematic are already addressed or not problematic for Bash.\n\nPlease feel free to [create an issue](../../issues) if you find a bug or have a feature request.\n\n## Usage\n\n```js\nvar glob = require('bash-glob');\nglob(pattern[, options]);\n```\n\n## API\n\n### [glob](index.js#L30)\n\nAsynchronously returns an array of files that match the given pattern or patterns.\n\n**Params**\n\n* `patterns` **{String|Array}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: Options to pass to bash. See available [options](#options).\n* `cb` **{Function}**: Callback function, with `err` and `files` array.\n\n**Example**\n\n```js\nvar glob = require('bash-glob');\nglob('*.js', function(err, files) {\n  if (err) return console.log(err);\n  console.log(files);\n});\n```\n\n### [.each](index.js#L98)\n\nAsynchronously glob an array of files that match any of the given `patterns`.\n\n**Params**\n\n* `patterns` **{String}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: Options to pass to bash. See available [options](#options).\n* `cb` **{Function}**: Callback function, with `err` and `files` array.\n\n**Example**\n\n```js\nvar glob = require('bash-glob');\nglob.each(['*.js', '*.md'], {dot: true}, function(err, files) {\n  if (err) return console.log(err);\n  console.log(files);\n});\n```\n\n### [.sync](index.js#L154)\n\nReturns an array of files that match the given patterns or patterns.\n\n**Params**\n\n* `patterns` **{String}**: One or more glob patterns to use for matching.\n* `options` **{Object}**: Options to pass to bash. See available [options](#options).\n* `returns` **{Array}**: Returns an array of files.\n\n**Example**\n\n```js\nvar glob = require('bash-glob');\nconsole.log(glob.sync('*.js', {cwd: 'foo'}));\nconsole.log(glob.sync(['*.js'], {cwd: 'bar'}));\n```\n\n## Options\n\nThe following options may be used with the main `glob` function or any other method:\n\n* `dotglob`: (or `dot`, for [node-glob](https://github.com/Crafity/node-glob) compatibility) Includes filenames beginning with a `.` (dot) in the results of pathname expansion.\n* `extglob`: Enable extended [pattern matching](http://wiki.bash-hackers.org/syntax/pattern) features.\n* `failglob`: If set, patterns that fail to match filenames during pathname expansion result in an error message.\n* `globstar`: Enable recursive globbing with `**`.\n* `nocaseglob`: (or `nocase`, for [node-glob](https://github.com/Crafity/node-glob) compatibility) Enable case-insensitive matching in filenames when performing pathname expansion.\n* `nullglob`: If set, Bash allows patterns which match no files to expand to a null string, rather than themselves.\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\nPlease read the [contributing guide](.github/contributing.md) for advice on opening issues, pull requests, and coding standards.\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [bash-match](https://www.npmjs.com/package/bash-match): Match strings using bash. Does not work on windows, and does not read from the… [more](https://github.com/micromatch/bash-match) | [homepage](https://github.com/micromatch/bash-match \"Match strings using bash. Does not work on windows, and does not read from the file system. This library requires that Bash 4.3 or higher is installed and is mostly used for checking parity in unit tests.\")\n* [braces](https://www.npmjs.com/package/braces): Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support… [more](https://github.com/micromatch/braces) | [homepage](https://github.com/micromatch/braces \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\")\n* [micromatch](https://www.npmjs.com/package/micromatch): Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch. | [homepage](https://github.com/micromatch/micromatch \"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.\")\n* [nanomatch](https://www.npmjs.com/package/nanomatch): Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash… [more](https://github.com/micromatch/nanomatch) | [homepage](https://github.com/micromatch/nanomatch \"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)\")\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on October 22, 2017._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016-2017, Jon Schlinkert.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/bash-glob/-/bash-glob-1.0.2.tgz#95ac5631fdd7a8fc569f267167a84eb831979a1b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/bash-glob/-/bash-glob-1.0.2.tgz",
    "hash": "95ac5631fdd7a8fc569f267167a84eb831979a1b",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "95ac5631fdd7a8fc569f267167a84eb831979a1b"
}