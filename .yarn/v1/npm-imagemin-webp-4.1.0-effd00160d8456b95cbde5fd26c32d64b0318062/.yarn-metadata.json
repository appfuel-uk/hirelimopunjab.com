{
  "manifest": {
    "name": "imagemin-webp",
    "version": "4.1.0",
    "description": "WebP imagemin plugin",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/imagemin/imagemin-webp.git"
    },
    "author": {
      "name": "Kevin Mårtensson",
      "email": "kevinmartensson@gmail.com",
      "url": "github.com/kevva"
    },
    "maintainers": [
      {
        "name": "Sindre Sorhus",
        "email": "sindresorhus@gmail.com",
        "url": "sindresorhus.com"
      },
      {
        "name": "Shinnosuke Watanabe",
        "url": "github.com/shinnn"
      }
    ],
    "engines": {
      "node": ">=4"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "compress",
      "cwebp",
      "image",
      "imageminplugin",
      "img",
      "jpg",
      "minify",
      "optimize",
      "png",
      "tif",
      "webp"
    ],
    "dependencies": {
      "cwebp-bin": "^4.0.0",
      "exec-buffer": "^3.0.0",
      "is-cwebp-readable": "^2.0.1"
    },
    "devDependencies": {
      "ava": "*",
      "is-webp": "^1.0.0",
      "pify": "^3.0.0",
      "xo": "*"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-imagemin-webp-4.1.0-effd00160d8456b95cbde5fd26c32d64b0318062/package.json",
    "readmeFilename": "readme.md",
    "readme": "# imagemin-webp [![Build Status](https://travis-ci.org/imagemin/imagemin-webp.svg?branch=master)](https://travis-ci.org/imagemin/imagemin-webp) [![Build status](https://ci.appveyor.com/api/projects/status/erd3nf73djfm4gjp?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/imagemin-webp)\n\n> WebP [imagemin](https://github.com/imagemin/imagemin) plugin\n\n\n## Install\n\n```\n$ npm install imagemin-webp\n```\n\n\n## Usage\n\n```js\nconst imagemin = require('imagemin');\nconst imageminWebp = require('imagemin-webp');\n\nimagemin(['images/*.{jpg,png}'], 'build/images', {\n\tuse: [\n\t\timageminWebp({quality: 50})\n\t]\n}).then(() => {\n\tconsole.log('Images optimized');\n});\n```\n\n\n## API\n\n### imageminWebp([options])(buffer)\n\n#### options\n\nType: `Object`\n\n##### preset\n\nType: `string`<br>\nDefault: `default`\n\nPreset setting, one of `default`, `photo`, `picture`, `drawing`, `icon` and `text`.\n\n##### quality\n\nType: `number`<br>\nDefault: `75`\n\nSet quality factor between `0` and `100`.\n\n##### alphaQuality\n\nType: `number`<br>\nDefault: `100`\n\nSet transparency-compression quality between `0` and `100`.\n\n##### method\n\nType: `number`<br>\nDefault: `4`\n\nSpecify the compression method to use, between `0` (fastest) and `6` (slowest). This parameter controls the trade off between encoding speed and the compressed file size and quality.\n\n##### size\n\nType: `number`<br>\n\nSet target size in bytes.\n\n##### sns\n\nType: `number`<br>\nDefault: `80`\n\nSet the amplitude of spatial noise shaping between `0` and `100`.\n\n##### filter\n\nType: `number`<br>\n\nSet deblocking filter strength between `0` (off) and `100`.\n\n##### autoFilter\n\nType: `boolean`<br>\nDefault: `false`<br>\n\nAdjust filter strength automatically.\n\n##### sharpness\n\nType: `number`<br>\nDefault: `0`\n\nSet filter sharpness between `0` (sharpest) and `7` (least sharp).\n\n##### lossless\n\nType: `boolean`<br>\nDefault: `false`\n\nEncode images losslessly.\n\n##### nearLossless\n\nType: `number`<br>\nDefault: `100`\n\nEncode losslessly with an additional [lossy pre-processing step](https://groups.google.com/a/webmproject.org/forum/#!msg/webp-discuss/0GmxDmlexek/3ggyYsaYdFEJ), with a quality factor between `0` (maximum pre-processing) and `100` (same as `lossless`).\n\n##### crop\n\nType: `Object { x: number, y: number, width: number, height: number }`\n\nCrop the image.\n\n##### resize\n\nType: `Object { width: number, height: number }`\n\nResize the image. Happens after `crop`.\n\n#### buffer\n\nType: `Buffer`\n\nBuffer to optimize.\n\n\n## License\n\nMIT © [Imagemin](https://github.com/imagemin)\n",
    "licenseText": "MIT License\n\nCopyright (c) Imagemin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/imagemin-webp/-/imagemin-webp-4.1.0.tgz#effd00160d8456b95cbde5fd26c32d64b0318062",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/imagemin-webp/-/imagemin-webp-4.1.0.tgz",
    "hash": "effd00160d8456b95cbde5fd26c32d64b0318062",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "effd00160d8456b95cbde5fd26c32d64b0318062"
}