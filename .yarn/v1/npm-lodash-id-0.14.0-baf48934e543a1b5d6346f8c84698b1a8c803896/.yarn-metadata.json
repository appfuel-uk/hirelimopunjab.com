{
  "manifest": {
    "name": "lodash-id",
    "version": "0.14.0",
    "description": "Use JavaScript objects as databases",
    "main": "src/index.js",
    "scripts": {
      "test": "mocha && standard && pkg-ok",
      "prepush": "npm test",
      "prepublish": "npm test"
    },
    "author": {
      "name": "Typicode",
      "email": "typicode@gmail.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/typicode/lodash-id.git"
    },
    "keywords": [
      "lodash",
      "lowdb",
      "underscore",
      "id",
      "resource",
      "mixin"
    ],
    "devDependencies": {
      "husky": "^0.11.8",
      "lodash": "^4.6.1",
      "mocha": "^3.2.0",
      "pkg-ok": "^1.0.1",
      "sinon": "~1.8.1",
      "standard": "^8.6.0",
      "underscore": "^1.8.3",
      "webpack": "^2.2.1"
    },
    "engines": {
      "node": ">= 4"
    },
    "standard": {
      "fix": true,
      "env": {
        "mocha": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-lodash-id-0.14.0-baf48934e543a1b5d6346f8c84698b1a8c803896/package.json",
    "readmeFilename": "README.md",
    "readme": "# lodash-id [![Build Status](https://travis-ci.org/typicode/lodash-id.svg)](https://travis-ci.org/typicode/lodash-id) [![NPM version](https://badge.fury.io/js/lodash-id.svg)](http://badge.fury.io/js/lodash-id)\n\n> `lodash-id` makes it easy to manipulate id-based resources with [lodash](https://lodash.com/) or [lowdb](https://github.com/typicode/lowdb)\n\n* `getById`\n* `insert`\n* `upsert`\n* `updateById`\n* `updateWhere`\n* `replaceById`\n* `removeById`\n* `removeWhere`\n* `createId`\n\n## Install\n\n```bash\n# with lodash\nnpm install lodash lodash-id --save\n\n# with lowdb\nnpm install lowdb lodash-id --save\n```\n\n__Note__ `lodash-id` is also compatible with [underscore](http://underscorejs.org/)\n\n## API\n\nIn the API examples, we're assuming `db` to be:\n\n```js\nconst db = {\n  posts: [\n    {id: 1, body: 'one', published: false},\n    {id: 2, body: 'two', published: true}\n  ],\n  comments: [\n    {id: 1, body: 'foo', postId: 1},\n    {id: 2, body: 'bar', postId: 2}\n  ]\n}\n```\n\n__getById(collection, id)__\n\nFinds and returns document by id or undefined.\n\n```js\nconst post = _.getById(db.posts, 1)\n```\n\n__insert(collection, document)__\n\nAdds document to collection, sets an id and returns created document.\n\n```js\nconst post = _.insert(db.posts, { body: 'New post' })\n```\n\nIf the document already has an id, and it is the same as an existing document in the collection, an error is thrown.\n\n```js\n_.insert(db.posts, { id: 1, body: 'New post' })\n_.insert(db.posts, { id: 1, title: 'New title' }) // Throws an error\n```\n\n__upsert(collection, document)__\n\nAdds document to collection, sets an id and returns created document.\n\n```js\nconst post = _.upsert(db.posts, { body: 'New post' })\n```\n\nIf the document already has an id, it will be used to insert or replace.\n\n```js\n_.upsert(db.posts, { id: 1, body: 'New post' })\n_.upsert(db.posts, { id: 1, title: 'New title' })\n_.getById(db.posts, 1) // { id: 1, title: 'New title' }\n```\n\n__updateById(collection, id, attrs)__\n\nFinds document by id, copies properties to it and returns updated document or undefined.\n\n```js\nconst post = _.updateById(db.posts, 1, { body: 'Updated body' })\n```\n\n__updateWhere(collection, whereAttrs, attrs)__\n\nFinds documents using `_.where`, updates documents and returns updated documents or an empty array.\n\n```js\n// Publish all unpublished posts\nconst posts = _.updateWhere(db.posts, { published: false }, { published: true })\n```\n\n__replaceById(collection, id, attrs)__\n\nFinds document by id, replaces properties and returns document or undefined.\n\n```js\nconst post = _.replaceById(db.posts, 1, { foo: 'bar' })\n```\n\n__removeById(collection, id)__\n\nRemoves document from collection and returns it or undefined.\n\n```js\nconst comment = _.removeById(db.comments, 1)\n```\n\n__removeWhere(collection, whereAttrs)__\n\nRemoves documents from collection using `_.where` and returns removed documents or an empty array.\n\n```js\nconst comments = _.removeWhere(db.comments, { postId: 1 })\n```\n\n__id__\n\nOverwrite it if you want to use another id property.\n\n```js\n_.id = '_id'\n```\n\n__createId(collectionName, doc)__\n\nCalled by lodash-id when a document is inserted. Overwrite it if you want to change id generation algorithm.\n\n```js\n_.createId = (collectionName, item) => `${collectionName}-${item.prop}-${Date.now()}`\n```\n\n## Changelog\n\nSee details changes for each version in the [release notes](https://github.com/typicode/lodash-id/releases).\n\n## License\n\nMIT - [Typicode :cactus:](https://github.com/typicode)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2013 typicode\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/lodash-id/-/lodash-id-0.14.0.tgz#baf48934e543a1b5d6346f8c84698b1a8c803896",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/lodash-id/-/lodash-id-0.14.0.tgz",
    "hash": "baf48934e543a1b5d6346f8c84698b1a8c803896",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "baf48934e543a1b5d6346f8c84698b1a8c803896"
}