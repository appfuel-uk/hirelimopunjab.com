{
  "manifest": {
    "name": "extract-text-webpack-plugin",
    "version": "1.0.1",
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "description": "Extract text from bundle into a file.",
    "peerDependencies": {
      "webpack": "^1.9.11"
    },
    "dependencies": {
      "async": "^1.5.0",
      "loader-utils": "^0.2.3",
      "webpack-sources": "^0.1.0"
    },
    "devDependencies": {
      "codecov.io": "^0.1.2",
      "coveralls": "^2.11.2",
      "css-loader": "^0.21.0",
      "file-loader": "^0.8.4",
      "istanbul": "^0.3.13",
      "mocha": "^2.3.3",
      "mocha-lcov-reporter": "0.0.2",
      "raw-loader": "^0.5.1",
      "should": "^7.1.1",
      "style-loader": "^0.13.0",
      "webpack": "^1.12.2"
    },
    "homepage": "http://github.com/webpack/extract-text-webpack-plugin",
    "repository": {
      "type": "git",
      "url": "http://github.com/webpack/extract-text-webpack-plugin.git"
    },
    "license": "MIT",
    "scripts": {
      "test": "mocha",
      "travis": "npm run cover -- --report lcovonly",
      "cover": "istanbul cover node_modules/mocha/bin/_mocha",
      "publish-patch": "mocha && npm version patch && git push && git push --tags && npm publish"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-extract-text-webpack-plugin-1.0.1-c95bf3cbaac49dc96f1dc6e072549fbb654ccd2c/package.json",
    "readmeFilename": "README.md",
    "readme": "# extract text plugin for webpack\n\n## Usage example with css\n\n``` javascript\nvar ExtractTextPlugin = require(\"extract-text-webpack-plugin\");\nmodule.exports = {\n\tmodule: {\n\t\tloaders: [\n\t\t\t{ test: /\\.css$/, loader: ExtractTextPlugin.extract(\"style-loader\", \"css-loader\") }\n\t\t]\n\t},\n\tplugins: [\n\t\tnew ExtractTextPlugin(\"styles.css\")\n\t]\n}\n```\n\nIt moves every `require(\"style.css\")` in entry chunks into a separate css output file. So your styles are no longer inlined into the javascript, but separate in a css bundle file (`styles.css`). If your total stylesheet volume is big, it will be faster because the stylesheet bundle is loaded in parallel to the javascript bundle.\n\nAdvantages:\n\n* Fewer style tags (older IE has a limit)\n* CSS SourceMap (with `devtool: \"source-map\"` and `css-loader?sourceMap`)\n* CSS requested in parallel\n* CSS cached separate\n* Faster runtime (less code and DOM operations)\n\nCaveats:\n\n* Additional HTTP request\n* Longer compilation time\n* More complex configuration\n* No runtime public path modification\n* No Hot Module Replacement\n\n## API\n\n``` javascript\nnew ExtractTextPlugin([id: string], filename: string, [options])\n```\n\n* `id` Unique ident for this plugin instance. (For advanded usage only, by default automatic generated)\n* `filename` the filename of the result file. May contain `[name]`, `[id]` and `[contenthash]`.\n  * `[name]` the name of the chunk\n  * `[id]` the number of the chunk\n  * `[contenthash]` a hash of the content of the extracted file\n* `options`\n  * `allChunks` extract from all additional chunks too (by default it extracts only from the initial chunk(s))\n  * `disable` disables the plugin\n\nThe `ExtractTextPlugin` generates an output file per entry, so you must use `[name]`, `[id]` or `[contenthash]` when using multiple entries.\n\n``` javascript\nExtractTextPlugin.extract([notExtractLoader], loader, [options])\n```\n\nCreates an extracting loader from an existing loader.\n\n* `notExtractLoader` (optional) the loader(s) that should be used when the css is not extracted (i.e. in an additional chunk when `allChunks: false`)\n* `loader` the loader(s) that should be used for converting the resource to a css exporting module.\n* `options`\n  * `publicPath` override the `publicPath` setting for this loader.\n\nThere is also an `extract` function on the instance. You should use this if you have more than one ExtractTextPlugin.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/extract-text-webpack-plugin/-/extract-text-webpack-plugin-1.0.1.tgz#c95bf3cbaac49dc96f1dc6e072549fbb654ccd2c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/extract-text-webpack-plugin/-/extract-text-webpack-plugin-1.0.1.tgz",
    "hash": "c95bf3cbaac49dc96f1dc6e072549fbb654ccd2c",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "c95bf3cbaac49dc96f1dc6e072549fbb654ccd2c"
}