{
  "manifest": {
    "name": "micro-api-client",
    "description": "Micro REST API client",
    "version": "3.2.2",
    "author": {
      "name": "Mathias Biilmann Christensen"
    },
    "bugs": {
      "url": "https://github.com/netlify/micro-api-client-lib/issues"
    },
    "devDependencies": {
      "babel-cli": "^6.8.0",
      "babel-eslint": "^8.2.1",
      "babel-plugin-syntax-object-rest-spread": "^6.8.0",
      "babel-plugin-transform-builtin-extend": "^1.1.2",
      "babel-plugin-transform-object-rest-spread": "^6.8.0",
      "babel-preset-env": "^1.6.1",
      "eslint": "^4.15.0",
      "eslint-config-prettier": "^2.3.0",
      "eslint-plugin-import": "^2.8.0",
      "eslint-plugin-prettier": "^2.1.2",
      "prettier": "^1.10.1"
    },
    "files": [
      "lib"
    ],
    "homepage": "https://github.com/netlify/micro-api-client-lib",
    "keywords": [
      "api",
      "fetch",
      "netlify"
    ],
    "license": "ISC",
    "main": "lib/index.js",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/netlify/micro-api-client-lib.git"
    },
    "scripts": {
      "compile": "babel src -d lib",
      "format": "eslint . --fix && prettier --write 'src/**/*.js'",
      "prepublish": "npm run compile",
      "prettier-preview": "prettier --list-different 'src/**/*.js'",
      "test": "eslint ."
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-micro-api-client-3.2.2-cd34aaf72cf9c66b987c3563ecdbfa68abb85afc/package.json",
    "readmeFilename": "README.md",
    "readme": "# micro-api-client\n\n[![Build Status](https://travis-ci.org/netlify/micro-api-client-lib.svg?branch=master)](https://travis-ci.org/netlify/micro-api-client-lib)\n\nSmall library for talking to micro REST APIs (not related to Netlify's main API).\n\n## Usage\n\n```js\nconst api = new API(\"/some/api/endpoint\");\napi\n  .request(\"foo\")\n  .then(response => console.log(response))\n  .catch(err => console.error(err));\n```\n\n### API\n\n### `api = new API(apiURL, [opts])`\n\nCreate a new `micro-api-client` instance. `apiURL` can be a full or relative URL. Optional `opts` include:\n\n```js\n{\n  defaultHeaders: {\n  } // header values to include in every request.\n}\n```\n\n### `api.request(path, [opts])`\n\nMake a request to the `apiURL` at the given `path`. Optional `opts` are passed to the [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) API:\n\n```js\n// Default options\n{\n  headers: {} // Optional headers object.  Overrides defaultHeaders\n  credentials: \"same-origin\" // set fetch credentials option\n  \"Content-Type\": \"application/json\" // set Content-Type fetch option\n}\n```\n\nReturns a promise with the `response`. If the `contentType` is JSON, it will be checked for pagination and return either the parsed JSON object or a paginated JSON object:\n\n```js\n// See src/pagination.js\n{\n  pagination: {\n    last,\n    next,\n    prev,\n    first,\n    current,\n    total\n  },\n  items: json\n}\n```\n\nIf an error occurs during the request, the promise may be rejected with an `HTTPError`, `TextHTTPError`, or `JSONHTTPError`.\n\n### `class HTTPError extends Error`\n\nAdditional error properties from Error\n\n```js\n{\n  stack, // stack trace of error\n  status // status code of response\n}\n```\n\n### `class TextHTTPError extends HTTPError`\n\nAdditional error properties from HTTPError\n\n```js\n{\n  data // data of text response\n}\n```\n\n### `class JSONHTTPError extends HTTPError`\n\nAdditional error properties from HTTPError\n\n```js\n{\n  json // json of a JSON response\n}\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micro-api-client/-/micro-api-client-3.2.2.tgz#cd34aaf72cf9c66b987c3563ecdbfa68abb85afc",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micro-api-client/-/micro-api-client-3.2.2.tgz",
    "hash": "cd34aaf72cf9c66b987c3563ecdbfa68abb85afc",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "cd34aaf72cf9c66b987c3563ecdbfa68abb85afc"
}