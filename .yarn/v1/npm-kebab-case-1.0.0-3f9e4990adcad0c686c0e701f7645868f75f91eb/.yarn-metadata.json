{
  "manifest": {
    "name": "kebab-case",
    "version": "1.0.0",
    "description": "Convert a string to kebab-case, i.e. its dash separated form",
    "main": "index.js",
    "scripts": {
      "test": "xo && ava"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/joakimbeng/kebab-case.git"
    },
    "keywords": [
      "kebab-case",
      "kebab",
      "dash",
      "dasherize",
      "dashify",
      "dash-case",
      "train-case",
      "lisp-case"
    ],
    "author": {
      "name": "Joakim Carlstein",
      "email": "joakim.carlstein@gmail.com",
      "url": "http://joakim.beng.se/"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/joakimbeng/kebab-case/issues"
    },
    "homepage": "https://github.com/joakimbeng/kebab-case#readme",
    "devDependencies": {
      "ava": "^0.8.0",
      "xo": "^0.12.1"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-kebab-case-1.0.0-3f9e4990adcad0c686c0e701f7645868f75f91eb/package.json",
    "readmeFilename": "README.md",
    "readme": "# kebab-case\n\n[![Build status][travis-image]][travis-url] [![NPM version][npm-image]][npm-url] [![XO code style][codestyle-image]][codestyle-url]\n\n> Convert a string to kebab-case, i.e. its dash separated form\n\nThe difference between `kebab-case` and e.g. [`dashify`](https://www.npmjs.com/package/dashify) is that this\nmodule doesn't modify the string in any other way than transforming uppercased letters to their lowercased\ncounterparts prefixed with `-`. Thanks to this there's also a [`reverse`](#kebabcasereversestr) function to\ndo the opposite, i.e. get back the original value.\n\nThis is used in [Unistyle](https://github.com/joakimbeng/unistyle) to transform JavaScript CSS properties\nto their CSS counterparts without losing a possible browser prefix, e.g: `WebkitTransform -> -webkit-transform`.\n\n## Installation\n\nInstall `kebab-case` using [npm](https://www.npmjs.com/):\n\n```bash\nnpm install --save kebab-case\n```\n\n## Usage\n\n### Module usage\n\n```javascript\nvar kebabCase = require('kebab-case');\n\nkebabCase('WebkitTransform');\n// \"-webkit-transform\"\nkebabCase.reverse('-webkit-transform');\n// \"WebkitTransform\"\n```\n\n## API\n\n### `kebabCase(str)`\n\n| Name | Type | Description |\n|------|------|-------------|\n| str | `String` | The string to convert |\n\nReturns: `String`, the kebab cased string.\n\n### `kebabCase.reverse(str)`\n\n| Name | Type | Description |\n|------|------|-------------|\n| str | `String` | The string to convert back |\n\nReturns: `String`, the \"unkebab cased\" string.\n\n## License\n\nMIT Â© [Joakim Carlstein](http://joakim.beng.se/)\n\n[npm-url]: https://npmjs.org/package/kebab-case\n[npm-image]: https://badge.fury.io/js/kebab-case.svg\n[travis-url]: https://travis-ci.org/joakimbeng/kebab-case\n[travis-image]: https://travis-ci.org/joakimbeng/kebab-case.svg?branch=master\n[codestyle-url]: https://github.com/sindresorhus/xo\n[codestyle-image]: https://img.shields.io/badge/code_style-XO-5ed9c7.svg?style=flat\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/kebab-case/-/kebab-case-1.0.0.tgz#3f9e4990adcad0c686c0e701f7645868f75f91eb",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/kebab-case/-/kebab-case-1.0.0.tgz",
    "hash": "3f9e4990adcad0c686c0e701f7645868f75f91eb",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "3f9e4990adcad0c686c0e701f7645868f75f91eb"
}