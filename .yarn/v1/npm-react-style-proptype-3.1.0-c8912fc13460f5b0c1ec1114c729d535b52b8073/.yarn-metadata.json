{
  "manifest": {
    "name": "react-style-proptype",
    "version": "3.1.0",
    "description": "validates style objects by ensuring they only have valid keys",
    "main": "src/index.js",
    "scripts": {
      "test": "node src/__test__/index.test.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/brigand/react-style-proptype.git"
    },
    "keywords": [
      "react",
      "proptype",
      "validation",
      "devtool",
      "style",
      "css"
    ],
    "author": {
      "name": "Frankie Bagnardi",
      "email": "f.bagnardi@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/brigand/react-style-proptype/issues"
    },
    "homepage": "https://github.com/brigand/react-style-proptype#readme",
    "dependencies": {
      "prop-types": "^15.5.4"
    },
    "devDependencies": {
      "cheerio": "^0.20.0",
      "flow-bin": "^0.57.3",
      "superagent": "^1.8.3",
      "tape": "^4.5.1"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-react-style-proptype-3.1.0-c8912fc13460f5b0c1ec1114c729d535b52b8073/package.json",
    "readmeFilename": "README.md",
    "readme": "Validates style objects by ensuring the keys are valid css property names (in camelcase form).\n\n\n```js\nvar stylePropType = require('react-style-proptype');\n\nvar Comp = React.createClass({\n  propTypes: {\n    myStyle: stylePropType,\n  },\n  render(){ ... }\n});\n```\n\nYou can use stylePropType.isRequired similar to the built in proptypes.\n\n## Flow\n\nWe also expose a flow type definition. It doesn't use an 'exact' type definition due to a bug in flow, so it'll allow invalid properties. The main purpose of this type is to improve the editor experience for custom components that accept a style prop.\n\n```jsx\nimport { type Style } from 'react-style-proptype/src/Style.flow.js';\n\ntype Props = {\n  style: Style,\n};\n```\n\n## Arrays\n\nWith react-native styles can be passed an array of objects. You can use this variant with\n`stylePropTypes.supportingArrays`.\n\n## Removing in production\n\nWhile prop-types aren't **executed** in production, they still take up bundle size. This is true of both the official prop-types package and react-style-proptype.\n\n[babel-plugin-transform-react-remove-prop-types](https://www.npmjs.com/package/babel-plugin-transform-react-remove-prop-types) can be used to completely remove prop-types, including the one from react-style-proptype.\n\nExample .babelrc\n\n```json\n{\n  \"presets\": [\"env\", \"react\"],\n  \"plugins\": [\n    [\n      \"transform-react-remove-prop-types\",\n      {\n        \"removeImport\": true,\n        \"additionalLibraries\": [\"react-style-proptype\"]\n      }\n    ]\n  ]\n}\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-style-proptype/-/react-style-proptype-3.1.0.tgz#c8912fc13460f5b0c1ec1114c729d535b52b8073",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-style-proptype/-/react-style-proptype-3.1.0.tgz",
    "hash": "c8912fc13460f5b0c1ec1114c729d535b52b8073",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "c8912fc13460f5b0c1ec1114c729d535b52b8073"
}