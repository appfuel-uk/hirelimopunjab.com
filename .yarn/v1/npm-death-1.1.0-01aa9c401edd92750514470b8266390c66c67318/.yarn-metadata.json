{
  "manifest": {
    "name": "death",
    "version": "1.1.0",
    "description": "Gracefully cleanup when termination signals are sent to your process.",
    "repository": {
      "type": "git",
      "url": "git@github.com:jprichardson/node-death.git"
    },
    "keywords": [
      "sigint",
      "sigterm",
      "sigkill",
      "sigquit",
      "exception",
      "kill",
      "terminate",
      "process",
      "clean"
    ],
    "author": {
      "name": "JP Richardson",
      "email": "jprichardson@gmail.com"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": ""
      }
    ],
    "dependencies": {},
    "devDependencies": {
      "win-spawn": "~1.1.1",
      "autoresolve": "0.0.3",
      "testutil": "~0.4.0",
      "colors": "~0.6.0-1"
    },
    "main": "./lib/death.js",
    "scripts": {
      "test": "mocha test"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-death-1.1.0-01aa9c401edd92750514470b8266390c66c67318/package.json",
    "readmeFilename": "README.md",
    "readme": "Node.js - death\n================\n\nGracefully cleanup when termination signals are sent to your process.\n\n\nWhy?\n----\n\nBecause adding clean up callbacks for `uncaughtException`, `SIGINT`, and `SIGTERM` is annoying. Ideally, you can\nuse this package to put your cleanup code in one place and exit gracefully if you need to.\n\n\nOperating System Compatibility\n------------------------------\n\nIt's only been tested on POSIX compatible systems. [Here's a nice discussion](https://github.com/joyent/node/issues/1553) on Windows signals, apparently, this has been fixed/mapped. \n\n\nInstallation\n------------\n\n    npm install death\n\n\n\nExample\n------\n\n```js\nvar ON_DEATH = require('death'); //this is intentionally ugly\n\nON_DEATH(function(signal, err) {\n  //clean up code here\n})\n```\n\n\nUsage\n-----\n\nBy default, it sets the callback on `SIGINT`, `SIGQUIT`, and `SIGTERM`.\n\n### Signals\n- **SIGINT**: Sent from CTRL-C\n- **SIGQUIT**: Sent from keyboard quit action.\n- **SIGTERM**: Sent from operating system `kill`.\n\nMore discussion and detail: http://www.gnu.org/software/libc/manual/html_node/Termination-Signals.html and http://pubs.opengroup.org/onlinepubs/009695399/basedefs/signal.h.html and http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap11.html.\n\nAS they pertain to Node.js: http://dailyjs.com/2012/03/15/unix-node-signals/\n\n\n#### Want to catch uncaughtException?\n\nNo problem, do this:\n\n```js\nvar ON_DEATH = require('death')({uncaughtException: true}) \n```\n\n#### Want to know which signals are being caught?\n\nDo this:\n\n```js\nvar ON_DEATH = require('death')({debug: true})\n```\n\nYour process will then log anytime it catches these signals.\n\n#### Want to catch SIGHUP?\n\nBe careful with this one though. Typically this is fired if your SSH connection dies, but can\nalso be fired if the program is made a daemon. \n\nDo this:\n\n```js\nvar ON_DEATH = require('death')({SIGHUP: true})\n```\n\n#### Why choose the ugly \"ON_DEATH\"?\n\nName it whatever you want. I like `ON_DEATH` because it stands out like a sore thumb in my code.\n\n\n#### Want to remove event handlers?\n\nIf you want to remove event handlers `ON_DEATH` returns a function for cleaning\nup after itself:\n\n```js\nvar ON_DEATH = require('death')\nvar OFF_DEATH = ON_DEATH(function(signal, err) {\n  //clean up code here\n})\n\n// later on...\nOFF_DEATH();\n```\n\nLicense\n-------\n\n(MIT License)\n\nCopyright 2012, JP Richardson  <jprichardson@gmail.com>\n\n\n",
    "license": "MIT",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2012, JP Richardson <jprichardson@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files \n(the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify,\n merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS \nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/death/-/death-1.1.0.tgz#01aa9c401edd92750514470b8266390c66c67318",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/death/-/death-1.1.0.tgz",
    "hash": "01aa9c401edd92750514470b8266390c66c67318",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "01aa9c401edd92750514470b8266390c66c67318"
}