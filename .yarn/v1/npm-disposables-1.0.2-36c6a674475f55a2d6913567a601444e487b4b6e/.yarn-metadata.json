{
  "manifest": {
    "name": "disposables",
    "version": "1.0.2",
    "description": "Disposables let you safely compose resource disposal semantics",
    "main": "modules/index.js",
    "files": [
      "modules"
    ],
    "scripts": {
      "build": "./scripts/build",
      "test": "./scripts/test",
      "test-cov": "./scripts/test-cov",
      "prepublish": "npm run build"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/gaearon/disposables.git"
    },
    "author": {
      "name": "Cloud Programmability Team",
      "url": "https://github.com/Reactive-Extensions/RxJS/blob/master/authors.txt"
    },
    "contributors": [
      {
        "name": "Dan Abramov",
        "email": "dan.abramov@me.com"
      }
    ],
    "license": "Apache-2.0",
    "bugs": {
      "url": "https://github.com/gaearon/disposables/issues"
    },
    "homepage": "https://github.com/gaearon/disposables",
    "devDependencies": {
      "babel": "^5.0.10",
      "expect.js": "^0.3.1",
      "istanbul": "~0.3.7",
      "mocha": "^2.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-disposables-1.0.2-36c6a674475f55a2d6913567a601444e487b4b6e/package.json",
    "readmeFilename": "README.md",
    "readme": "# NOT ACTIVELY MAINTAINED\n\n>**This project works fine but is not actively maintained.**  \n>**For the new code, you might want to try the new official [rx.disposables](https://github.com/Reactive-Extensions/rx.disposables) package instead.**\n\n# disposables [![npm package](https://img.shields.io/npm/v/disposables.svg?style=flat-square)](https://www.npmjs.org/package/disposables)\n\nDisposables let you safely compose resource disposal semantics.  \nThink DOM nodes, event handlers, socket connections.\n\n**This implementation of disposables is extracted from [RxJS](https://github.com/Reactive-Extensions/RxJS/blob/master/src/core/disposables).**  \nI took the liberty to tweak the code style to my liking and provide this as a standalone package.\n\nThis tiny package includes several disposables:\n\n* [`Disposable`](https://github.com/gaearon/disposables/blob/master/src/Disposable.js) ensures its `dispose` action runs only once;\n* [`CompositeDisposable`](https://github.com/gaearon/disposables/blob/master/src/CompositeDisposable.js) ensures a group of disposables are disposed together;\n* [`SerialDisposable`](https://github.com/gaearon/disposables/blob/master/src/SerialDisposable.js) switches underlying disposables on the fly and disposes them.\n\nThe API is *mostly* the same as RxJS except stricter in a few places.  \nIt does not strive for 100% API compatibility with RxJS, but generally behavior is the same.\n\nIt's best if you consult the [source](https://github.com/gaearon/disposables/tree/master/src/) and [tests](https://github.com/gaearon/disposables/tree/master/src/__tests__), as classes are small and few.\n\n### Usage\n\n```js\nimport { Disposable, CompositeDisposable, SerialDisposable } from 'disposables';\n\n// or you can import just the ones you need to keep it even tinier\n// import SerialDisposable from 'disposables/modules/SerialDisposable';\n\nfunction attachHandlers(node) {\n\tlet someHandler = ...;\n\tnode.addEventHandler(someHandler);\n\n\t// use Disposable to guarantee single execution\n\treturn new Disposable(() => {\n\t  node.removeEventHandler(someHandler);\n\t});\n}\n\n// CompositeDisposable lets you compose several disposables...\nlet nodes = ...;\nlet compositeDisp = new CompositeDisposable(nodes.map(attachHandlers));\n\n// and more later...\nlet moreNodes = ...\nmoreNodes.map(attachHandlers).forEach(d => compositeDisp.add(d));\n\n// and dispose them at once!\nfunction goodbye() {\n\tcompositeDisp.dispose();\n}\n\n// ... or replace with a bunch of new ones ...\nlet serialDisp = new SerialDisposable();\nserialDisp.setDisposable(compositeDisp);\n\nfunction replaceNodes(newNodes) {\n\tlet nextCompositeDisp = new CompositeDisposable(newNodes.map(attachHandlers));\n\n\t// release all the previous disposables:\n\tserialDisp.setDisposable(nextCompositeDisp);\n}\n\n// with a guarantee of each dispose() called only once.\n```\n\n### License\n\nLike the original RxJS code, it is licensed under Apache 2.0.\n",
    "licenseText": "Copyright (c) Microsoft Open Technologies, Inc.  All rights reserved.\nMicrosoft Open Technologies would like to thank its contributors, a list\nof whom are at http://rx.codeplex.com/wikipage?title=Contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\nmay not use this file except in compliance with the License. You may\nobtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing permissions\nand limitations under the License."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/disposables/-/disposables-1.0.2.tgz#36c6a674475f55a2d6913567a601444e487b4b6e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/disposables/-/disposables-1.0.2.tgz",
    "hash": "36c6a674475f55a2d6913567a601444e487b4b6e",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "36c6a674475f55a2d6913567a601444e487b4b6e"
}