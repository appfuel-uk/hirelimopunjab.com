{
  "manifest": {
    "name": "buffer-peek-stream",
    "version": "1.0.1",
    "description": "Transform stream that lets you inspect the start of a ReadStream before deciding what to do with it",
    "main": "buffer-peek-stream.js",
    "scripts": {
      "test": "node_modules/mocha/bin/mocha test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/seangarner/node-buffer-peek-stream.git"
    },
    "keywords": [
      "stream",
      "streams",
      "peek",
      "parse",
      "buffer",
      "inspect"
    ],
    "author": {
      "name": "Sean Garner"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/seangarner/node-buffer-peek-stream/issues"
    },
    "homepage": "https://github.com/seangarner/node-buffer-peek-stream",
    "devDependencies": {
      "chai": "^1.10.0",
      "concat-stream": "^1.4.6",
      "dev-null-stream": "0.0.1",
      "mocha": "^2.0.1",
      "randstream": "^0.3.2",
      "truncate-stream": "^1.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-buffer-peek-stream-1.0.1-53b47570a1347787c5bad4ca2ca3021f9d8b3cfd/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-buffer-peek-stream\n\n[![Build Status](https://travis-ci.org/seangarner/node-buffer-peek-stream.svg?branch=master)](https://travis-ci.org/seangarner/node-buffer-peek-stream)\n\nA Transform stream which lets you take a peek at the first bytes before unpiping itself and\nunshifting the buffer back onto the upstream stream leaving the original stream ready to be\npiped again onto its final destination.\n\n```\nnpm install buffer-peek-stream\n```\n\nUseful if you want to inspect the start of a stream before deciding what to do with it.\n\nThis works with buffers and does no string decoding.  If you know you have a string and already\nknow its encoding then checkout [peek-stream](https://github.com/mafintosh/peek-stream).\n\n\n## Usage\nAs a function...\n```\nvar peek = require('buffer-peek-stream');\nvar readstream = fs.createReadStream('package.json');\n\npeek(readstream, 65536, function (err, data, outputStream) {\n  if (err) throw err;\n\n  // outputStream is ready to be piped somewhere else\n  outputStream.pipe(somewhere_else);\n});\n```\n\nAs a stream...\n```\nvar PeekStream = require('buffer-peek-stream').BufferPeekStream;\n\nvar peek = new PeekStream(65536);\nvar readstream = fs.createReadStream('package.json');\n\n// peek will only emit the data event once\npeek.once('data', function (buf) {\n\n  // readstream is ready to be piped somewhere else\n  peek.pipe(somewhere_else);\n});\n\nreadstream.pipe(peek);\n\n// alternatively pipe `peek` here instead of in `data` callback\n```\n\n\n## Licence\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Sean Garner\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/buffer-peek-stream/-/buffer-peek-stream-1.0.1.tgz#53b47570a1347787c5bad4ca2ca3021f9d8b3cfd",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/buffer-peek-stream/-/buffer-peek-stream-1.0.1.tgz",
    "hash": "53b47570a1347787c5bad4ca2ca3021f9d8b3cfd",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "53b47570a1347787c5bad4ca2ca3021f9d8b3cfd"
}