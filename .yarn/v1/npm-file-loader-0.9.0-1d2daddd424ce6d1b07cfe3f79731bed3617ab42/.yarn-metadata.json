{
  "manifest": {
    "name": "file-loader",
    "version": "0.9.0",
    "author": {
      "name": "Tobias Koppers @sokra"
    },
    "description": "file loader module for webpack",
    "files": [
      "index.js"
    ],
    "dependencies": {
      "loader-utils": "~0.2.5"
    },
    "devDependencies": {
      "should": "~4.0.4",
      "mocha": "~1.21.3"
    },
    "scripts": {
      "test": "mocha -R spec"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/webpack/file-loader.git"
    },
    "bugs": {
      "url": "https://github.com/webpack/file-loader/issues"
    },
    "homepage": "https://github.com/webpack/file-loader",
    "main": "index.js",
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-file-loader-0.9.0-1d2daddd424ce6d1b07cfe3f79731bed3617ab42/package.json",
    "readmeFilename": "README.md",
    "readme": "# file loader for webpack\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar url = require(\"file!./file.png\");\n// => emits file.png as file in the output directory and returns the public url\n// => returns i. e. \"/public-path/0dcbbaa701328a3c262cfd45869e351f.png\"\n```\n\nBy default the filename of the resulting file is the MD5 hash of the file's contents \nwith the original extension of the required resource.\n\nBy default a file is emitted, however this can be disabled if required (e.g. for server\nside packages).\n\n``` javascript\nvar url = require(\"file?emitFile=false!./file.png\");\n// => returns the public url but does NOT emit a file\n// => returns i. e. \"/public-path/0dcbbaa701328a3c262cfd45869e351f.png\"\n```\n\n## Filename templates\n\nYou can configure a custom filename template for your file using the query\nparameter `name`. For instance, to copy a file from your `context` directory\ninto the output directory retaining the full directory structure, you might\nuse `?name=[path][name].[ext]`.\n\n### Filename template placeholders\n\n* `[ext]` the extension of the resource\n* `[name]` the basename of the resource\n* `[path]` the path of the resource relative to the `context` query parameter or option.\n* `[hash]` the hash of the content, `hex`-encoded `md5` by default\n* `[<hashType>:hash:<digestType>:<length>]` optionally you can configure\n  * other `hashType`s, i. e. `sha1`, `md5`, `sha256`, `sha512`\n  * other `digestType`s, i. e. `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n  * and `length` the length in chars\n* `[N]` the N-th match obtained from matching the current file name against the query param `regExp`\n\n## Examples\n\n``` javascript\nrequire(\"file?name=js/[hash].script.[ext]!./javascript.js\");\n// => js/0dcbbaa701328a3c262cfd45869e351f.script.js\n\nrequire(\"file?name=html-[hash:6].html!./page.html\");\n// => html-109fa8.html\n\nrequire(\"file?name=[hash]!./flash.txt\");\n// => c31e9820c001c9c4a86bce33ce43b679\n\nrequire(\"file?name=[sha512:hash:base64:7].[ext]!./image.png\");\n// => gdyb21L.png\n// use sha512 hash instead of md5 and with only 7 chars of base64\n\nrequire(\"file?name=img-[sha512:hash:base64:7].[ext]!./image.jpg\");\n// => img-VqzT5ZC.jpg\n// use custom name, sha512 hash instead of md5 and with only 7 chars of base64\n\nrequire(\"file?name=picture.png!./myself.png\");\n// => picture.png\n\nrequire(\"file?name=[path][name].[ext]?[hash]!./dir/file.png\")\n// => dir/file.png?e43b20c069c4a01867c31e98cbce33c9\n```\n\n## Installation\n\n```npm install file-loader --save-dev```\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/file-loader/-/file-loader-0.9.0.tgz#1d2daddd424ce6d1b07cfe3f79731bed3617ab42",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/file-loader/-/file-loader-0.9.0.tgz",
    "hash": "1d2daddd424ce6d1b07cfe3f79731bed3617ab42",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "1d2daddd424ce6d1b07cfe3f79731bed3617ab42"
}