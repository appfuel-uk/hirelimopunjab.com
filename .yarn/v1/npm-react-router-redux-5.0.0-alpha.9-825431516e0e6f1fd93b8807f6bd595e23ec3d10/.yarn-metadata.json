{
  "manifest": {
    "name": "react-router-redux",
    "version": "5.0.0-alpha.9",
    "description": "Redux bindings for React Router",
    "repository": {
      "type": "git",
      "url": "https://github.com/ReactTraining/react-router.git"
    },
    "license": "MIT",
    "authors": [
      "Tim Dorr"
    ],
    "files": [
      "ConnectedRouter.js",
      "actions.js",
      "es",
      "index.js",
      "selectors.js",
      "middleware.js",
      "reducer.js",
      "umd"
    ],
    "main": "index.js",
    "module": "es/index.js",
    "scripts": {
      "build": "node ./tools/build.js",
      "prepublishOnly": "node ./tools/build.js",
      "watch": "babel ./modules -d . --ignore __tests__ --watch",
      "clean": "git clean -fdX .",
      "lint": "eslint modules",
      "test": "jest"
    },
    "peerDependencies": {
      "react": ">=15"
    },
    "dependencies": {
      "history": "^4.7.2",
      "prop-types": "^15.6.0",
      "react-router": "^4.2.0"
    },
    "devDependencies": {
      "babel-cli": "^6.26.0",
      "babel-core": "^6.21.0",
      "babel-eslint": "^8.0.1",
      "babel-jest": "^21.2.0",
      "babel-plugin-transform-react-remove-prop-types": "^0.4.10",
      "babel-preset-es2015": "^6.14.0",
      "babel-preset-react": "^6.5.0",
      "babel-preset-stage-1": "^6.5.0",
      "eslint": "^4.9.0",
      "eslint-plugin-import": "^2.2.0",
      "eslint-plugin-react": "^7.4.0",
      "gzip-size": "^4.0.0",
      "jest": "^21.2.1",
      "pretty-bytes": "^4.0.2",
      "react": "^16.0.0",
      "react-dom": "^16.0.0",
      "react-redux": "^5.0.6",
      "react-test-renderer": "^16.1.0",
      "redux": "^3.6.0",
      "rollup": "^0.50.0",
      "rollup-plugin-babel": "^3.0.2",
      "rollup-plugin-uglify": "^2.0.1"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-react-router-redux-5.0.0-alpha.9-825431516e0e6f1fd93b8807f6bd595e23ec3d10/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-router-redux\n\n[![npm version](https://img.shields.io/npm/v/react-router-redux/next.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux)  [![npm downloads](https://img.shields.io/npm/dm/react-router-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-router-redux) [![build status](https://img.shields.io/travis/reactjs/react-router-redux/master.svg?style=flat-square)](https://travis-ci.org/reactjs/react-router-redux)\n\n> **Keep your state in sync with your router** :sparkles:\n\nThis is beta software, it needs:\n\n1. A working example\n2. Some people to try it out and find bugs\n3. A strategy for working with the devtools\n   - (issue describing a different approach to what we've seen previously coming soon)\n   \n## Versions\n\nThis (react-router-redux 5.x) is the version of react-router-redux for use with react-router 4.x. \nUsers of react-router 2.x and 3.x want to use react-router-redux found at [the legacy repository](https://github.com/reactjs/react-router-redux).\n\n## Installation\n\n```\nnpm install --save react-router-redux@next\nnpm install --save history\n```\n\n## Usage\n\nHere's a basic idea of how it works:\n\n```js\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport createHistory from 'history/createBrowserHistory'\nimport { Route } from 'react-router'\n\nimport { ConnectedRouter, routerReducer, routerMiddleware, push } from 'react-router-redux'\n\nimport reducers from './reducers' // Or wherever you keep your reducers\n\n// Create a history of your choosing (we're using a browser history in this case)\nconst history = createHistory()\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst middleware = routerMiddleware(history)\n\n// Add the reducer to your store on the `router` key\n// Also apply our middleware for navigating\nconst store = createStore(\n  combineReducers({\n    ...reducers,\n    router: routerReducer\n  }),\n  applyMiddleware(middleware)\n)\n\n// Now you can dispatch navigation actions from anywhere!\n// store.dispatch(push('/foo'))\n\nReactDOM.render(\n  <Provider store={store}>\n    { /* ConnectedRouter will use the store from Provider automatically */ }\n    <ConnectedRouter history={history}>\n      <div>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/topics\" component={Topics}/>\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-router-redux/-/react-router-redux-5.0.0-alpha.9.tgz#825431516e0e6f1fd93b8807f6bd595e23ec3d10",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-router-redux/-/react-router-redux-5.0.0-alpha.9.tgz",
    "hash": "825431516e0e6f1fd93b8807f6bd595e23ec3d10",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "825431516e0e6f1fd93b8807f6bd595e23ec3d10"
}