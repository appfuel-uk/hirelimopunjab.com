{
  "manifest": {
    "name": "teeny-tap",
    "version": "0.2.0",
    "description": "Listen for both clicks and click-like touches (not scrolls or drags)",
    "main": "index.js",
    "scripts": {
      "demo-dev": "watchify demo/demo.js -o demo/demo-bundle.js -v & http-server demo",
      "demo-bundle": "browserify demo/demo.js > demo/demo-bundle.js",
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/davidtheclark/teeny-tap.git"
    },
    "keywords": [
      "tap",
      "click",
      "mobile",
      "touch",
      "event",
      "listener"
    ],
    "author": {
      "name": "David Clark"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/davidtheclark/teeny-tap/issues"
    },
    "homepage": "https://github.com/davidtheclark/teeny-tap#readme",
    "devDependencies": {
      "browserify": "13.0.0",
      "http-server": "0.8.5",
      "watchify": "3.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-teeny-tap-0.2.0-167e645182d06ac222d62bb2ab67947a70a58a68/package.json",
    "readmeFilename": "README.md",
    "readme": "# teeny-tap\n\n**Status: Experimental, Under Active Development**\n\nListen for both clicks and click-like touches (not scrolls or drags).\n\nThis library is very small and simple and focused, without any dependencies.\nIt is not a touch gesture library or a complete fastclick-style solution.\nPlenty of similar libraries exist, but none of them seemed exactly right for\nmy simple needs. For more about the purpose of the library, read [\"Why?\"](#why).\n\nThis library is heavily inspired by [tap.js](https://github.com/alexgibson/tap.js),\nwhich is no longer maintained.\n\n**[Check out the demo](http://davidtheclark.github.io/teeny-tap/demo/).**\n\n(If the demo works on your phone, would you mind tweeting me your specs,\n`@davidtheclark`? That way I can list the devices where we know it works.\nAnd of course let me know if you find any bugs!)\n\n## Installation\n\n```\nnpm install teeny-tap\n```\n\nYou will need to be compiling CommonJS modules (browserify or webpack).\n\n### Browser Support\n\nIE9+ and everything help, I hope. Testing underway.\n(If you can help out by trying the demo on your mobile device, please do!)\n\n## Usage\n\n```js\nvar createTapListener = require('teeny-tap');\n\nvar docTapListener = createTapListener(document.documentElement, function(e) {\n  console.log('A tap happened!');\n});\n\n// ...\ndocTapListener.remove();\n```\n\nThat's it. Very simple. You create and remove listeners.\n\n### API\n\n#### `var tapListenerInstance = createTapListener(element, callback[, useCapture])`\n\nAdds a tap listener on `element`, using `addEventListener()`.\nWhen there's a tap, `callback` is invoked with\nthe relevant `event` as its argument (either a `click` or `touchend` event).\n\n**Returns an object with a `remove` function, for removing the listener.**\n\n#### `tapListenerInstance.remove()`\n\nRemove the listener that you added when you created `tapListenerInstance`.\n\n## Why?\n\nFor\n[react-aria-menubutton](https://github.com/davidtheclark/react-aria-menubutton),\nI need to close an open menu when the user taps/clicks outside of it.\n\nThe click event wasn't reliable: mobile Safari screws it up.\nSo I needed to **distinguish, on touch devices, between *touches\nthat are scrolling or dragging* and *touches that are clicking*,\nin situations where the regular `click` event doesn't work**.\nExisting solutions that I found weren't satisfactory for a few reasons:\n\n- jQuery or other dependencies I didn't want or need.\n\n- Many just threw in a `touchstart` or `touchend`\nlistener, in addition to the click; but that alone won't distinguish\nbetween tapping and scrolling/dragging, so it's insufficient.\nThe menu might close when you, say, scroll down in order to see more of it.\nEgad!\n\n- One solution to the detect-clicks-outside-an-element problem is to add an\nunderlay that covers the page, beneath the element, and listen for clicks on that.\nHowever, this prevents the click from getting through and actually\n*doing* something; so if I click a link outside the open menu,\nthat click only closes the menu, and I have to click *again* to\ngo where I wanted to go. Non-optimal.\n\n- A number of solutions just use `click` events, which won't\nwork on most browsers on most iPhones and iPads, due to\nmobile Safari's unique and unpleasant handling of click events.\n\n- Some went the other way, and had more fine-tuning than I want or need.\n\n[tap.js](https://github.com/alexgibson/tap.js) pretty much provided exactly what I needed,\nbut that library is no longer maintained so I made this one to carry the torch,\nto fill the need.\n\nBut know that *I do not like that this exists, do not want it to need to exist*.\nIf you know of a way to accomplish the same goal without this library,\nplease let me know!\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 David Clark\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/teeny-tap/-/teeny-tap-0.2.0.tgz#167e645182d06ac222d62bb2ab67947a70a58a68",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/teeny-tap/-/teeny-tap-0.2.0.tgz",
    "hash": "167e645182d06ac222d62bb2ab67947a70a58a68",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "167e645182d06ac222d62bb2ab67947a70a58a68"
}