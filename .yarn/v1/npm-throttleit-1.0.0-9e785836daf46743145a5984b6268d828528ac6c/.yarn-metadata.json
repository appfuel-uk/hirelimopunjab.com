{
  "manifest": {
    "name": "throttleit",
    "description": "Throttle a function",
    "version": "1.0.0",
    "keywords": [],
    "repository": {
      "type": "git",
      "url": "git://github.com/component/throttle.git"
    },
    "devDependencies": {
      "mocha": "^1.18.0"
    },
    "license": "MIT",
    "component": {
      "scripts": {
        "throttle/index.js": "index.js"
      }
    },
    "scripts": {
      "test": "mocha --reporter spec"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-throttleit-1.0.0-9e785836daf46743145a5984b6268d828528ac6c/package.json",
    "readmeFilename": "Readme.md",
    "readme": "\n# throttle\n\n  Throttle a function\n\n## Installation\n\n    $ component install component/throttle\n\n## Example\n\n    var throttle = require('throttle');\n    window.onresize = throttle(resize, 200);\n\n    function resize(e) {\n      console.log('height', window.innerHeight);\n      console.log('width', window.innerWidth);\n    }\n\n## API\n\n### throttle(fn, wait)\n\nCreates a function that will call `fn` at most once every `wait` milliseconds.\n\nSupports leading and trailing invocation.\n\n`fn` will receive last context (`this`) and last arguments passed to a throttled wrapper before `fn` was invoked.\n\n## License\n\n  MIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/throttleit/-/throttleit-1.0.0.tgz#9e785836daf46743145a5984b6268d828528ac6c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/throttleit/-/throttleit-1.0.0.tgz",
    "hash": "9e785836daf46743145a5984b6268d828528ac6c",
    "registry": "npm",
    "packageName": "throttleit"
  },
  "registry": "npm",
  "hash": "9e785836daf46743145a5984b6268d828528ac6c"
}