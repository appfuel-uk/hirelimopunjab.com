{
  "manifest": {
    "name": "hast-util-to-string",
    "version": "1.0.1",
    "description": "Get the plain-text value of a node",
    "license": "MIT",
    "keywords": [
      "rehype",
      "hast",
      "string"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/rehype-minify/tree/master/packages/hast-util-to-string"
    },
    "bugs": {
      "url": "https://github.com/wooorm/rehype-minify/issues"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com"
      }
    ],
    "files": [
      "index.js"
    ],
    "xo": false,
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-hast-util-to-string-1.0.1-b28055cdca012d3c8fd048757c8483d0de0d002c/package.json",
    "readmeFilename": "readme.md",
    "readme": "<!--This file is generated by `build-packages.js`-->\n\n# hast-util-to-string\n\nGet the plain-text value of a HAST node.\n\n## Install\n\n```sh\nnpm install hast-util-to-string\n```\n\n## Usage\n\n```javascript\nvar h = require('hastscript');\nvar toString = require('hast-util-to-string');\n\ntoString(h('p', 'Alpha'));\n//=> 'Alpha'\ntoString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']));\n//=> 'Bold and italic.'\n```\n\n## API\n\n### `toString(node)`\n\nTransform a node to string.\n\n## License\n\n[MIT](https://github.com/wooorm/rehype-minify/blob/master/LICENSE) Â© [Titus Wormer](http://wooorm.com)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-to-string/-/hast-util-to-string-1.0.1.tgz#b28055cdca012d3c8fd048757c8483d0de0d002c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-to-string/-/hast-util-to-string-1.0.1.tgz",
    "hash": "b28055cdca012d3c8fd048757c8483d0de0d002c",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "b28055cdca012d3c8fd048757c8483d0de0d002c"
}