{
  "manifest": {
    "name": "semaphore",
    "version": "1.1.0",
    "description": "semaphore for node",
    "engines": {
      "node": ">=0.8.0"
    },
    "main": "./lib/semaphore.js",
    "dependencies": {},
    "devDependencies": {
      "mocha": "2.x.x",
      "should": "8.x.x"
    },
    "homepage": "https://github.com/abrkn/semaphore.js",
    "repository": {
      "type": "git",
      "url": "git@github.com:abrkn/semaphore.js.git"
    },
    "scripts": {
      "test": "mocha"
    },
    "_registry": "npm",
    "_loc": "/home/ali/Project/uforce/cairo/.yarn/v1/npm-semaphore-1.1.0-aaad8b86b20fe8e9b32b16dc2ee682a8cd26a8aa/package.json",
    "readmeFilename": "README.md",
    "readme": "semaphore.js\n============\n\n[![Build Status](https://travis-ci.org/abrkn/semaphore.js.svg?branch=master)](https://travis-ci.org/abrkn/semaphore.js)\n\nInstall:\nnpm install semaphore\n\nLimit simultaneous access to a resource.\n\n```javascript\n// Create\nvar sem = require('semaphore')(capacity);\n\n// Take\nsem.take(fn[, n=1])\nsem.take(n, fn)\n\n// Leave\nsem.leave([n])\n\n// Available\nsem.available([n])\n```\n\n\n```javascript\n// Limit concurrent db access\nvar sem = require('semaphore')(1);\nvar server = require('http').createServer(req, res) {\n\tsem.take(function() {\n\t\texpensive_database_operation(function(err, res) {\n\t\t\tsem.leave();\n\n\t\t\tif (err) return res.end(\"Error\");\n\n\t\t\treturn res.end(res);\n\t\t});\n\t});\n});\n```\n\n```javascript\n// 2 clients at a time\nvar sem = require('semaphore')(2);\nvar server = require('http').createServer(req, res) {\n\tres.write(\"Then good day, madam!\");\n\n\tsem.take(function() {\n\t\tres.end(\"We hope to see you soon for tea.\");\n\t\tsem.leave();\n\t});\n});\n```\n\n```javascript\n// Rate limit\nvar sem = require('semaphore')(10);\nvar server = require('http').createServer(req, res) {\n\tsem.take(function() {\n\t\tres.end(\".\");\n\t\t\n\t\tsetTimeout(sem.leave, 500)\n\t});\n});\n```\n\nLicense\n===\n\nMIT\n",
    "license": "MIT*"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/semaphore/-/semaphore-1.1.0.tgz#aaad8b86b20fe8e9b32b16dc2ee682a8cd26a8aa",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/semaphore/-/semaphore-1.1.0.tgz",
    "hash": "aaad8b86b20fe8e9b32b16dc2ee682a8cd26a8aa",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "aaad8b86b20fe8e9b32b16dc2ee682a8cd26a8aa"
}